
testFILE-ZEROLENGTH(){
        fileName='file.0'
        fileSrcObj=$(jq '.files."file.0" // empty' <<< "$srcJson")
        fileTskObj=$(jq '.files."file.0" // empty' <<< "$tskJson")

        assertNotNull "Source File $fileName not found" "$fileSrcObj"
        assertNotNull "TSK File $fileName not found" "$fileTskObj"

	[[ -z "$fileSrcObj" ]] && startSkipping
        [[ -z "$fileTskObj" ]] && startSkipping

        src=$(jq '.filepath // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.filepath // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty filepath" "$src"
        assertNotNull "TSK File $fileName empty filepath" "$tsk"
        assertEquals "Path of $fileName does not match" "$src" "$tsk"

        src=$(jq '.inode // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.inode // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty inode" "$src"
        assertNotNull "TSK File $fileName empty inode" "$tsk"
        assertEquals "Inode of $fileName does not match" "$src" "$tsk"

        src=$(jq '.file_type // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.file_type // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty file_type" "$src"
        assertNotNull "TSK File $fileName empty file_type" "$tsk"
        assertEquals "Type of $fileName does not match" "$src" "$tsk"

        src=$(jq '.mode // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.mode // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty mode" "$src"
        assertNotNull "TSK File $fileName empty mode" "$tsk"
        assertEquals "Mode of $fileName does not match" "$src" "$tsk"

        src=$(jq '.size // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.size // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty size" "$src"
        assertNotNull "TSK File $fileName empty size" "$tsk"
        assertEquals "Size of $fileName does not match" "$src" "$tsk"

        src=$(jq '.modified // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.modified // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty modified" "$src"
        assertNotNull "TSK File $fileName empty modified" "$tsk"
        assertEquals "Modified Timestamp of $fileName does not match" "$src" "$tsk"

        src=$(jq '.accessed // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.accessed // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty accessed" "$src"
        assertNotNull "TSK File $fileName empty accessed" "$tsk"
        assertEquals "Accessed Timestamp of $fileName does not match" "$src" "$tsk"

        src=$(jq '.changed // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.changed // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty changed" "$src"
        assertNotNull "TSK File $fileName empty changed" "$tsk"
        assertEquals "Change Timestamp of $fileName does not match" "$src" "$tsk"

        src=$(jq '.created // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.created // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty created" "$src"
        assertNotNull "TSK File $fileName empty created" "$tsk"
        assertEquals "Creation Timestamp of $fileName does not match" "$src" "$tsk"

        src=$(jq '.sha256 // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.sha256 // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty sha256" "$src"
        assertNotNull "TSK File $fileName empty sha256" "$tsk"
        assertEquals "Sha256 Checksum of $fileName does not match" "$src" "$tsk"
}

# binary file
testFILE-BINARY() {
        fileName='file.binary'
        fileSrcObj=$(jq '.files."file.binary" // empty' <<< "$srcJson")
        fileTskObj=$(jq '.files."file.binary" // empty' <<< "$tskJson")

        assertNotNull "Source File $fileName not found" "$fileSrcObj"
        assertNotNull "TSK File $fileName not found" "$fileTskObj"

	[[ -z "$fileSrcObj" ]] && startSkipping
        [[ -z "$fileTskObj" ]] && startSkipping

        src=$(jq '.filepath // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.filepath // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty filepath" "$src"
        assertNotNull "TSK File $fileName empty filepath" "$tsk"
        assertEquals "Path of $fileName does not match" "$src" "$tsk"

        src=$(jq '.inode // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.inode // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty inode" "$src"
        assertNotNull "TSK File $fileName empty inode" "$tsk"
        assertEquals "Inode of $fileName does not match" "$src" "$tsk"

        src=$(jq '.file_type // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.file_type // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty file_type" "$src"
        assertNotNull "TSK File $fileName empty file_type" "$tsk"
        assertEquals "Type of $fileName does not match" "$src" "$tsk"

        src=$(jq '.mode // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.mode // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty mode" "$src"
        assertNotNull "TSK File $fileName empty mode" "$tsk"
        assertEquals "Mode of $fileName does not match" "$src" "$tsk"

        src=$(jq '.size // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.size // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty size" "$src"
        assertNotNull "TSK File $fileName empty size" "$tsk"
        assertEquals "Size of $fileName does not match" "$src" "$tsk"

        src=$(jq '.modified // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.modified // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty modified" "$src"
        assertNotNull "TSK File $fileName empty modified" "$tsk"
        assertEquals "Modified Timestamp of $fileName does not match" "$src" "$tsk"

        src=$(jq '.accessed // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.accessed // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty accessed" "$src"
        assertNotNull "TSK File $fileName empty accessed" "$tsk"
        assertEquals "Accessed Timestamp of $fileName does not match" "$src" "$tsk"

        src=$(jq '.changed // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.changed // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty changed" "$src"
        assertNotNull "TSK File $fileName empty changed" "$tsk"
        assertEquals "Change Timestamp of $fileName does not match" "$src" "$tsk"

        src=$(jq '.created // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.created // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty created" "$src"
        assertNotNull "TSK File $fileName empty created" "$tsk"
        assertEquals "Creation Timestamp of $fileName does not match" "$src" "$tsk"

        src=$(jq '.sha256 // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.sha256 // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty sha256" "$src"
        assertNotNull "TSK File $fileName empty sha256" "$tsk"
        assertEquals "Sha256 Checksum of $fileName does not match" "$src" "$tsk"
}

# text file
testFILE-TEXT(){
        fileName='file.txt'
        fileSrcObj=$(jq '.files."file.txt" // empty' <<< "$srcJson")
        fileTskObj=$(jq '.files."file.txt" // empty' <<< "$tskJson")
        
	assertNotNull "Source File $fileName not found" "$fileSrcObj"
        assertNotNull "TSK File $fileName not found" "$fileTskObj"

	[[ -z "$fileSrcObj" ]] && startSkipping
        [[ -z "$fileTskObj" ]] && startSkipping

        src=$(jq '.filepath // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.filepath // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty filepath" "$src"
        assertNotNull "TSK File $fileName empty filepath" "$tsk"
        assertEquals "Path of $fileName does not match" "$src" "$tsk"

        src=$(jq '.inode // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.inode // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty inode" "$src"
        assertNotNull "TSK File $fileName empty inode" "$tsk"
        assertEquals "Inode of $fileName does not match" "$src" "$tsk"

        src=$(jq '.file_type // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.file_type // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty file_type" "$src"
        assertNotNull "TSK File $fileName empty file_type" "$tsk"
        assertEquals "Type of $fileName does not match" "$src" "$tsk"

        src=$(jq '.mode // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.mode // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty mode" "$src"
        assertNotNull "TSK File $fileName empty mode" "$tsk"
        assertEquals "Mode of $fileName does not match" "$src" "$tsk"

        src=$(jq '.size // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.size // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty size" "$src"
        assertNotNull "TSK File $fileName empty size" "$tsk"
        assertEquals "Size of $fileName does not match" "$src" "$tsk"

        src=$(jq '.modified // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.modified // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty modified" "$src"
        assertNotNull "TSK File $fileName empty modified" "$tsk"
        assertEquals "Modified Timestamp of $fileName does not match" "$src" "$tsk"

        src=$(jq '.accessed // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.accessed // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty accessed" "$src"
        assertNotNull "TSK File $fileName empty accessed" "$tsk"
        assertEquals "Accessed Timestamp of $fileName does not match" "$src" "$tsk"

        src=$(jq '.changed // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.changed // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty changed" "$src"
        assertNotNull "TSK File $fileName empty changed" "$tsk"
        assertEquals "Change Timestamp of $fileName does not match" "$src" "$tsk"

        src=$(jq '.created // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.created // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty created" "$src"
        assertNotNull "TSK File $fileName empty created" "$tsk"
        assertEquals "Creation Timestamp of $fileName does not match" "$src" "$tsk"

        src=$(jq '.sha256 // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.sha256 // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty sha256" "$src"
        assertNotNull "TSK File $fileName empty sha256" "$tsk"
        assertEquals "Sha256 Checksum of $fileName does not match" "$src" "$tsk"
}

# subdirectory
testFILE-SUBDIR(){
	fileName='subdir'
	fileSrcObj=$(jq '.files."subdir" // empty' <<< "$srcJson")
	fileTskObj=$(jq '.files."subdir" // empty' <<< "$tskJson")
	
	assertNotNull "Source File $fileName not found" "$fileSrcObj"
	assertNotNull "TSK File $fileName not found" "$fileTskObj"

	[[ -z "$fileSrcObj" ]] && startSkipping
        [[ -z "$fileTskObj" ]] && startSkipping
	

        src=$(jq '.filepath // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.filepath // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty filepath" "$src"
        assertNotNull "TSK File $fileName empty filepath" "$tsk"
        assertEquals "Path of $fileName does not match" "$src" "$tsk"

        src=$(jq '.inode // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.inode // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty inode" "$src"
        assertNotNull "TSK File $fileName empty inode" "$tsk"
        assertEquals "Inode of $fileName does not match" "$src" "$tsk"

        src=$(jq '.file_type // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.file_type // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty file_type" "$src"
        assertNotNull "TSK File $fileName empty file_type" "$tsk"
        assertEquals "Type of $fileName does not match" "$src" "$tsk"

        src=$(jq '.mode // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.mode // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty mode" "$src"
        assertNotNull "TSK File $fileName empty mode" "$tsk"
        assertEquals "Mode of $fileName does not match" "$src" "$tsk"

        #subdir has no size to compare

        src=$(jq '.modified // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.modified // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty modified" "$src"
        assertNotNull "TSK File $fileName empty modified" "$tsk"
        assertEquals "Modified Timestamp of $fileName does not match" "$src" "$tsk"

        src=$(jq '.accessed // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.accessed // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty accessed" "$src"
        assertNotNull "TSK File $fileName empty accessed" "$tsk"
        assertEquals "Accessed Timestamp of $fileName does not match" "$src" "$tsk"

        src=$(jq '.changed // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.changed // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty changed" "$src"
        assertNotNull "TSK File $fileName empty changed" "$tsk"
        assertEquals "Change Timestamp of $fileName does not match" "$src" "$tsk"

        src=$(jq '.created // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.created // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty created" "$src"
        assertNotNull "TSK File $fileName empty created" "$tsk"
        assertEquals "Creation Timestamp of $fileName does not match" "$src" "$tsk"

	#subdir has no content to hash
}

# file in subdirectory
testFILE-SUBFILE(){
        fileName='file2.txt'
        fileSrcObj=$(jq '.files."file2.txt" // empty' <<< "$srcJson")
        fileTskObj=$(jq '.files."file2.txt" // empty' <<< "$tskJson")

	assertNotNull "Source File $fileName not found" "$fileSrcObj"
        assertNotNull "TSK File $fileName not found" "$fileTskObj"

	[[ -z "$fileSrcObj" ]] && startSkipping
        [[ -z "$fileTskObj" ]] && startSkipping

        src=$(jq '.filepath // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.filepath // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty filepath" "$src"
        assertNotNull "TSK File $fileName empty filepath" "$tsk"
        assertEquals "Path of $fileName does not match" "$src" "$tsk"

        src=$(jq '.inode // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.inode // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty inode" "$src"
        assertNotNull "TSK File $fileName empty inode" "$tsk"
        assertEquals "Inode of $fileName does not match" "$src" "$tsk"

        src=$(jq '.file_type // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.file_type // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty file_type" "$src"
        assertNotNull "TSK File $fileName empty file_type" "$tsk"
        assertEquals "Type of $fileName does not match" "$src" "$tsk"

        src=$(jq '.mode // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.mode // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty mode" "$src"
        assertNotNull "TSK File $fileName empty mode" "$tsk"
        assertEquals "Mode of $fileName does not match" "$src" "$tsk"

        src=$(jq '.size // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.size // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty size" "$src"
        assertNotNull "TSK File $fileName empty size" "$tsk"
        assertEquals "Size of $fileName does not match" "$src" "$tsk"

        src=$(jq '.modified // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.modified // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty modified" "$src"
        assertNotNull "TSK File $fileName empty modified" "$tsk"
        assertEquals "Modified Timestamp of $fileName does not match" "$src" "$tsk"

        src=$(jq '.accessed // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.accessed // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty accessed" "$src"
        assertNotNull "TSK File $fileName empty accessed" "$tsk"
        assertEquals "Accessed Timestamp of $fileName does not match" "$src" "$tsk"

        src=$(jq '.changed // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.changed // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty changed" "$src"
        assertNotNull "TSK File $fileName empty changed" "$tsk"
        assertEquals "Change Timestamp of $fileName does not match" "$src" "$tsk"
        
	src=$(jq '.created // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.created // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty created" "$src"
        assertNotNull "TSK File $fileName empty created" "$tsk"
        assertEquals "Creation Timestamp of $fileName does not match" "$src" "$tsk"
        
	src=$(jq '.sha256 // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.sha256 // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty sha256" "$src"
        assertNotNull "TSK File $fileName empty sha256" "$tsk"
        assertEquals "Sha256 Checksum of $fileName does not match" "$src" "$tsk"
}


# deleted file
testFILE-DELETED(){
	fileName="delfile.txt"
	fileSrcObj=$(jq '.files."delfile.txt" // empty' <<< "$srcJson")
	delInode=$(jq --arg f "$fileName" '.files | select( .[$f] ) | .[$f].inode  // empty' <<< "$srcJson" | tr -d '"')
	fileTskObj=$(jq --arg reg_exp ".*${delInode}.*" '.files | with_entries(select(.key | match($reg_exp))) | [.[]|select(length > 0)][0] // empty' <<< "$tskJson")
	assertNotNull "Source File $fileName not found" "$fileSrcObj"
        assertNotNull "TSK File $fileName not found" "$fileTskObj"

	[[ -z "$fileSrcObj" ]] && startSkipping
        [[ -z "$fileTskObj" ]] && startSkipping

        src=$(jq '.filepath // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.filepath // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty filepath" "$src"
        assertNotNull "TSK File $fileName empty filepath" "$tsk"
        assertEquals "Path of $fileName does not match" "$src" "$tsk"

        src=$(jq '.inode // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.inode // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty inode" "$src"
        assertNotNull "TSK File $fileName empty inode" "$tsk"
        assertEquals "Inode of $fileName does not match" "$src" "$tsk"

        src=$(jq '.file_type // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.file_type // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty file_type" "$src"
        assertNotNull "TSK File $fileName empty file_type" "$tsk"
        assertEquals "Type of $fileName does not match" "$src" "$tsk"

        src=$(jq '.mode // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.mode // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty mode" "$src"
        assertNotNull "TSK File $fileName empty mode" "$tsk"
        assertEquals "Mode of $fileName does not match" "$src" "$tsk"

        src=$(jq '.size // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.size // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty size" "$src"
        assertNotNull "TSK File $fileName empty size" "$tsk"
        assertEquals "Size of $fileName does not match" "$src" "$tsk"

        src=$(jq '.modified // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.modified // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty modified" "$src"
        assertNotNull "TSK File $fileName empty modified" "$tsk"
        assertEquals "Modified Timestamp of $fileName does not match" "$src" "$tsk"

        src=$(jq '.accessed // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.accessed // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty accessed" "$src"
        assertNotNull "TSK File $fileName empty accessed" "$tsk"
        assertEquals "Accessed Timestamp of $fileName does not match" "$src" "$tsk"

        src=$(jq '.changed // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.changed // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty changed" "$src"
        assertNotNull "TSK File $fileName empty changed" "$tsk"
        assertEquals "Change Timestamp of $fileName does not match" "$src" "$tsk"

        src=$(jq '.created // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.created // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty created" "$src"
        assertNotNull "TSK File $fileName empty created" "$tsk"
        assertEquals "Creation Timestamp of $fileName does not match" "$src" "$tsk"

        src=$(jq '.sha256 // empty' <<< "$fileSrcObj" | tr -d '"')
        tsk=$(jq '.sha256 // empty' <<< "$fileTskObj" | tr -d '"')
        assertNotNull "Source File $fileName empty sha256" "$src"
        assertNotNull "TSK File $fileName empty sha256" "$tsk"
        assertEquals "Sha256 Checksum of $fileName does not match" "$src" "$tsk"
}
